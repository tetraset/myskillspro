<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\ORM\Mapping as ORM;

/**
 * This file has been generated by the Sonata EasyExtends bundle.
 *
 * @link https://sonata-project.org/bundles/easy-extends
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var int $id
     */
    protected $id;

    /**
     * @ORM\Column(name="vkontakte_id", type="string", length=255, nullable=true)
     */
    protected $vkontakteId;

    /**
     * @var string $vkontakteAccessToken
     */
    protected $vkontakteAccessToken;

    /**
     * @ORM\Column(name="facebook_id", type="string", length=255, nullable=true)
     */
    private $facebookId;

    /**
     * @var string $facebookAccessToken
     */
    private $facebookAccessToken;

    /**
     * @ORM\Column(name="twitter_id", type="string", length=255, nullable=true)
     */
    protected $twitterId;

    /**
     * @var string $twitterAccessToken
     */
    protected $twitterAccessToken;

    /**
     * @var string $picture
     */
    private $picture;

    /**
     * @var string $email
     */
    protected $email;

    /**
     * @var string $emailCanonical
     */
    protected $emailCanonical = null;

    /**
     * @var bool $isUpdatedPicture
     */
    protected $isUpdatedPicture = false;

    /**
     * @var int $subscriptionMonths
     */
    protected $subscriptionMonths = 0;

    /**
     * @var \DateTime $subscriptionStart
     */
    protected $subscriptionStart;

    /**
     * @ORM\Column(name="score", type="integer", nullable=false)
     */
    protected $score = 0;

    /**
     * @ORM\Column(name="level", type="integer", nullable=false)
     */
    protected $level = 1;

    /**
     * @ORM\Column(name="games", type="integer", nullable=false)
     */
    protected $games = 0;

    /**
     * Первое длинное видео без хардсаба в играх
     * @var boolean
     *
     * @ORM\Column(type="boolean", nullable=false)
     */
    private $withoutHardsub = false;

    /**
     * @ORM\Column(name="country_ids", type="string", length=255, nullable=true)
     */
    protected $countryIds;

    /**
     * @ORM\Column(name="genre_ids", type="string", length=255, nullable=true)
     */
    protected $genreIds;

    /**
     * @ORM\Column(name="series_ids", type="string", length=255, nullable=true)
     */
    protected $seriesIds;

    /**
     * @ORM\Column(name="hints", type="integer", nullable=false)
     */
    protected $hints = 0;

    /**
     * @return mixed
     */
    public function getCountryIds()
    {
        return $this->countryIds;
    }

    /**
     * @param mixed $countryIds
     */
    public function setCountryIds($countryIds)
    {
        $this->countryIds = $countryIds;
    }

    /**
     * @return mixed
     */
    public function getGenreIds()
    {
        return $this->genreIds;
    }

    /**
     * @param mixed $genreIds
     */
    public function setGenreIds($genreIds)
    {
        $this->genreIds = $genreIds;
    }

    /**
     * @return mixed
     */
    public function getSeriesIds()
    {
        return $this->seriesIds;
    }

    /**
     * @param mixed $seriesIds
     */
    public function setSeriesIds($seriesIds)
    {
        $this->seriesIds = $seriesIds;
    }

    /**
     * @return mixed
     */
    public function getHints()
    {
        return $this->hints;
    }

    /**
     * @param mixed $hints
     */
    public function setHints($hints)
    {
        $this->hints = $hints;
    }

    /**
     * @return boolean
     */
    public function isWithoutHardsub()
    {
        return $this->withoutHardsub;
    }

    /**
     * @param boolean $withoutHardsub
     */
    public function setWithoutHardsub($withoutHardsub)
    {
        $this->withoutHardsub = $withoutHardsub;
    }

    /**
     * @return mixed
     */
    public function getScore()
    {
        return $this->score;
    }

    /**
     * @param mixed $score
     */
    public function setScore($score)
    {
        $this->score = $score;
    }

    /**
     * @return mixed
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * @param mixed $level
     */
    public function setLevel($level)
    {
        $this->level = $level;
    }

    /**
     * @return mixed
     */
    public function getGames()
    {
        return $this->games;
    }

    /**
     * @param mixed $games
     */
    public function setGames($games)
    {
        $this->games = $games;
    }

    /**
     * @return int
     */
    public function getSubscriptionMonths()
    {
        return $this->subscriptionMonths;
    }

    /**
     * @param int $subscriptionMonths
     */
    public function setSubscriptionMonths($subscriptionMonths)
    {
        $this->subscriptionMonths = $subscriptionMonths;
    }

    /**
     * @return \DateTime
     */
    public function getSubscriptionStart()
    {
        return $this->subscriptionStart;
    }

    /**
     * @param \DateTime $subscriptionStart
     */
    public function setSubscriptionStart($subscriptionStart)
    {
        $this->subscriptionStart = $subscriptionStart;
    }

    /**
     * @return bool
     */
    public function isActiveSubscription() {
        if(!$this->subscriptionMonths || !$this->subscriptionStart) {
            return false;
        }
        return time() <= ($this->subscriptionStart->getTimestamp() + (60 * 60 * 24 * 30 * $this->subscriptionMonths));
    }
    public function getFinishSubscriptionDate() {
        return $this->subscriptionStart->setTimestamp($this->subscriptionStart->getTimestamp() + (60 * 60 * 24 * 30 * $this->subscriptionMonths));
    }

    /**
     * @return \DateTime
     */

    /**
     * @return boolean
     */
    public function isIsUpdatedPicture()
    {
        return $this->isUpdatedPicture;
    }

    /**
     * @param boolean $isUpdatedPicture
     */
    public function setIsUpdatedPicture($isUpdatedPicture)
    {
        $this->isUpdatedPicture = $isUpdatedPicture;
    }

    /**
     * @return mixed
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * @param string $email
     */
    public function setEmail($email)
    {
        $this->email = $email;
    }

    /**
     * @return mixed
     */
    public function getEmailCanonical()
    {
        return empty($this->emailCanonical) ? null : $this->emailCanonical;
    }

    /**
     * @param string $emailCanonical
     */
    public function setEmailCanonical($emailCanonical)
    {
        $this->emailCanonical = $emailCanonical;
    }

    /**
     * @return mixed
     */
    public function getTwitterId()
    {
        return $this->twitterId;
    }

    /**
     * @param mixed $twitterId
     */
    public function setTwitterId($twitterId)
    {
        $this->twitterId = $twitterId;
    }

    /**
     * @return string
     */
    public function getTwitterAccessToken()
    {
        return $this->twitterAccessToken;
    }

    /**
     * @param string $twitterAccessToken
     */
    public function setTwitterAccessToken($twitterAccessToken)
    {
        $this->twitterAccessToken = $twitterAccessToken;
    }

    /**
     * @return string
     */
    public function getPicture()
    {
        return $this->picture;
    }

    /**
     * @param string $picture
     */
    public function setPicture($picture)
    {
        $this->picture = $picture;
    }

    /**
     * @return mixed
     */
    public function getFacebookId()
    {
        return $this->facebookId;
    }

    /**
     * @param mixed $facebookId
     */
    public function setFacebookId($facebookId)
    {
        $this->facebookId = $facebookId;
    }

    /**
     * @return mixed
     */
    public function getFacebookAccessToken()
    {
        return $this->facebookAccessToken;
    }

    /**
     * @param mixed $facebookAccessToken
     */
    public function setFacebookAccessToken($facebookAccessToken)
    {
        $this->facebookAccessToken = $facebookAccessToken;
    }

    /**
     * Get id
     *
     * @return int $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return int
     */
    public function getVkontakteId()
    {
        return $this->vkontakteId;
    }

    /**
     * @param int $vkontakteId
     */
    public function setVkontakteId($vkontakteId)
    {
        $this->vkontakteId = $vkontakteId;
    }

    /**
     * @return string
     */
    public function getVkontakteAccessToken()
    {
        return $this->vkontakteAccessToken;
    }

    /**
     * @param string $vkontakteAccessToken
     */
    public function setVkontakteAccessToken($vkontakteAccessToken)
    {
        $this->vkontakteAccessToken = $vkontakteAccessToken;
    }

    /**
     * Hook on pre-persist operations
     */
    public function prePersist()
    {
        parent::prePersist();
        $this->emailCanonical = $this->getEmailCanonical();
    }

    /**
     * Hook on pre-update operations
     */
    public function preUpdate()
    {
        parent::preUpdate();
        $this->emailCanonical = $this->getEmailCanonical();
    }
}
